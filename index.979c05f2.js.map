{"mappings":"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","sources":["core/constants.js","export.js","node_modules/d3-hexbin/src/hexbin.js","node_modules/d3-array/src/fsum.js","node_modules/d3-array/src/merge.js","node_modules/d3-array/src/sum.js","node_modules/d3-geo/src/identity.js","node_modules/d3-geo/src/stream.js","node_modules/d3-geo/src/math.js","node_modules/d3-geo/src/noop.js","node_modules/d3-geo/src/path/area.js","node_modules/d3-geo/src/path/bounds.js","node_modules/d3-geo/src/path/centroid.js","node_modules/d3-geo/src/path/context.js","node_modules/d3-geo/src/path/measure.js","node_modules/d3-geo/src/path/string.js","node_modules/d3-geo/src/path/index.js","node_modules/d3-geo/src/clip/buffer.js","node_modules/d3-geo/src/pointEqual.js","node_modules/d3-geo/src/clip/rejoin.js","node_modules/d3-geo/src/cartesian.js","node_modules/d3-geo/src/polygonContains.js","node_modules/d3-geo/src/clip/index.js","node_modules/d3-geo/src/clip/antimeridian.js","node_modules/d3-geo/src/compose.js","node_modules/d3-geo/src/rotation.js","node_modules/d3-geo/src/circle.js","node_modules/d3-geo/src/clip/circle.js","node_modules/d3-geo/src/clip/rectangle.js","node_modules/d3-geo/src/clip/line.js","node_modules/d3-geo/src/transform.js","node_modules/d3-geo/src/projection/fit.js","node_modules/d3-geo/src/projection/resample.js","node_modules/d3-geo/src/projection/index.js","node_modules/d3-geo/src/projection/conicEqualArea.js","node_modules/d3-geo/src/projection/cylindricalEqualArea.js","node_modules/d3-geo/src/projection/conic.js","node_modules/topojson-client/src/identity.js","node_modules/topojson-client/src/transform.js","node_modules/topojson-client/src/feature.js","node_modules/topojson-client/src/reverse.js","core/catogram.js","node_modules/d3-geo/src/projection/albers.js","core/shaper.js","core/events.js","core/plot.js","app.js"],"sourcesContent":["export const colors = ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad', '#2c3e50',\n    '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b', '#bdc3c7', '#7f8c8d'];\n\nexport const margin = { top: 15, right: 10, bottom: 15, left: 10 };\nexport const width = 1350 - margin.left - margin.right;\nexport const height = 750 - margin.top - margin.bottom;\nexport const strokeWidth = 0.5;\n\nexport const cellAction = {\n    Add: 'Add',\n    Remove: 'Remove'\n};\n\nexport const cellPolygon = {\n    Hexagon: 'Hexagon',\n    Square: 'Square'\n};\n\nexport const outputFileType = {\n    SVG: 'SVG',\n    GeoJSON: 'GeoJSON'\n};\n","import { outputFileType } from \"./core/constants\";\n\nexport function download(fileType, year) {\n    var filename = \"cartogram\" + year;\n    switch (fileType) {\n        case outputFileType.GeoJSON:\n            downloadObjectAsJson(exportJson, filename)\n        case outputFileType.SVG:\n            d3.select(\"#download\").each(function () {\n                d3.select(this)\n                    .attr(\"href\", 'data:application/octet-stream;base64,' + btoa(d3.select(\"#container\").html()))\n                    .attr(\"download\", filename + \".svg\")\n            })\n    }\n}\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n  ","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default x => x;\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import { sum } from \"d3-array\";\nimport { geoAlbers, geoPath } from \"d3-geo\";\nimport { feature as topoFeature } from \"topojson-client\";\n\n// Original source code @shawnbot/topogram\nexport default function () {\n  var iterations = 8,\n    projection = geoAlbers(),\n    properties = function (id) {\n      return {};\n    },\n    value = function (d) {\n      return 1;\n    };\n\n  function cartogram(topology, geometries) {\n\n    topology = copy(topology);\n    var tf = transformer(topology.transform), x, y, len1, i1, out1, len2 = topology.arcs.length, i2 = 0,\n      projectedArcs = new Array(len2);\n    while (i2 < len2) {\n      x = 0;\n      y = 0;\n      len1 = topology.arcs[i2].length;\n      i1 = 0;\n      out1 = new Array(len1);\n      while (i1 < len1) {\n        topology.arcs[i2][i1][0] = (x += topology.arcs[i2][i1][0]);\n        topology.arcs[i2][i1][1] = (y += topology.arcs[i2][i1][1]);\n        out1[i1] = projection === null ? tf(topology.arcs[i2][i1]) : projection(tf(topology.arcs[i2][i1]));\n        i1++;\n      }\n      projectedArcs[i2++] = out1;\n\n    }\n\n    var path = geoPath()\n      .projection(null);\n\n    var objects = object(projectedArcs, { type: \"GeometryCollection\", geometries: geometries })\n      .geometries.map(function (geom) {\n        return {\n          type: \"Feature\",\n          id: geom.id,\n          properties: properties.call(null, geom, topology),\n          geometry: geom\n        };\n      });\n\n    var values = objects.map(value),\n      totalValue = sum(values);\n\n    if (iterations <= 0) {\n      return objects;\n    }\n\n    var i = 0;\n    while (i++ < iterations) {\n      var areas = objects.map(path.area);\n      var totalArea = sum(areas),\n        sizeErrorsTot = 0,\n        sizeErrorsNum = 0,\n        meta = objects.map(function (o, j) {\n          var area = Math.abs(areas[j]),\n            v = +values[j],\n            desired = totalArea * v / totalValue,\n            radius = Math.sqrt(area / Math.PI),\n            mass = Math.sqrt(desired / Math.PI) - radius,\n            sizeError = Math.max(area, desired) / Math.min(area, desired);\n          sizeErrorsTot += sizeError;\n          sizeErrorsNum++;\n          return {\n            id: o.id,\n            area: area,\n            centroid: path.centroid(o),\n            value: v,\n            desired: desired,\n            radius: radius,\n            mass: mass,\n            sizeError: sizeError\n          };\n        });\n\n      var sizeError = sizeErrorsTot / sizeErrorsNum,\n        forceReductionFactor = 1 / (1 + sizeError);\n\n      var len1, i1, delta, len2 = projectedArcs.length, i2 = 0, delta, len3, i3, centroid, mass, radius, rSquared, dx, dy, distSquared, dist, Fij;\n      while (i2 < len2) {\n        len1 = projectedArcs[i2].length;\n        i1 = 0;\n        while (i1 < len1) {\n          delta = [0, 0];\n          len3 = meta.length;\n          i3 = 0;\n          while (i3 < len3) {\n            centroid = meta[i3].centroid;\n            mass = meta[i3].mass;\n            radius = meta[i3].radius;\n            rSquared = (radius * radius);\n            dx = projectedArcs[i2][i1][0] - centroid[0];\n            dy = projectedArcs[i2][i1][1] - centroid[1];\n            distSquared = dx * dx + dy * dy;\n            dist = Math.sqrt(distSquared);\n            Fij = (dist > radius)\n              ? mass * radius / dist\n              : mass *\n              (distSquared / rSquared) *\n              (4 - 3 * dist / radius);\n            delta[0] += (Fij * cosArctan(dy, dx));\n            delta[1] += (Fij * sinArctan(dy, dx));\n            i3++;\n          }\n          projectedArcs[i2][i1][0] += (delta[0] * forceReductionFactor);\n          projectedArcs[i2][i1][1] += (delta[1] * forceReductionFactor);\n          i1++;\n        }\n        i2++;\n      }\n\n      if (sizeError <= 1) break;\n    }\n\n    return {\n      features: objects,\n      arcs: projectedArcs\n    };\n  }\n\n  function cosArctan(dx, dy) {\n    if (dy === 0) return 0;\n    var div = dx / dy;\n    return (dy > 0) ?\n      (1 / Math.sqrt(1 + (div * div))) :\n      (-1 / Math.sqrt(1 + (div * div)));\n  }\n\n  function sinArctan(dx, dy) {\n    if (dy === 0) return 1;\n    var div = dx / dy;\n    return (dy > 0) ?\n      (div / Math.sqrt(1 + (div * div))) :\n      (-div / Math.sqrt(1 + (div * div)));\n  }\n\n  function copy(o) {\n    return (o instanceof Array)\n      ? o.map(copy)\n      : (typeof o === \"string\" || typeof o === \"number\")\n        ? o\n        : copyObject(o);\n  }\n\n  function copyObject(o) {\n    var obj = {};\n    for (var k in o) obj[k] = copy(o[k]);\n    return obj;\n  }\n\n  function object(arcs, o) {\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n        points.push(a[k]);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(line);\n    }\n\n    function geometry(o) {\n      o = Object.create(o);\n      o.coordinates = geometryType[o.type](o.arcs);\n      return o;\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function (arcs) { return arcs.map(polygon); }\n    };\n\n    return o.type === \"GeometryCollection\"\n      ? (o = Object.create(o), o.geometries = o.geometries.map(geometry), o)\n      : geometry(o);\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  cartogram.path = geoPath()\n    .projection(null);\n\n  cartogram.iterations = function (i) {\n    if (arguments.length) {\n      iterations = i;\n      return cartogram;\n    } else {\n      return iterations;\n    }\n  };\n\n  cartogram.value = function (v) {\n    if (arguments.length) {\n      value = typeof v === \"function\" ? v : constant(v);\n      return cartogram;\n    } else {\n      return value;\n    }\n  };\n\n  cartogram.projection = function (p) {\n    if (arguments.length) {\n      projection = p;\n      return cartogram;\n    } else {\n      return projection;\n    }\n  };\n\n  cartogram.feature = function (topology, geom) {\n    return {\n      type: \"Feature\",\n      id: geom.id,\n      properties: properties.call(null, geom, topology),\n      geometry: {\n        type: geom.type,\n        coordinates: topoFeature(topology, geom).geometry.coordinates\n      }\n    };\n  };\n\n  cartogram.features = function (topo, geometries) {\n    return geometries.map(function (f) {\n      return cartogram.feature(topo, f);\n    });\n  };\n\n  cartogram.properties = function (props) {\n    if (arguments.length) {\n      properties = typeof props === \"function\" ? props : constant(props);\n      return cartogram;\n    } else {\n      return properties;\n    }\n  };\n\n  function constant(x) {\n    return function () {\n      return x;\n    };\n  };\n\n\n  var transformer = cartogram.transformer = function (tf) {\n    var kx = tf.scale[0],\n      ky = tf.scale[1],\n      dx = tf.translate[0],\n      dy = tf.translate[1];\n\n    function transform(c) {\n      return [c[0] * kx + dx, c[1] * ky + dy];\n    }\n\n    transform.invert = function (c) {\n      return [(c[0] - dx) / kx, (c[1] - dy) / ky];\n    };\n\n    return transform;\n  };\n\n  return cartogram;\n};","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import { cellPolygon } from \"./constants\";\n\nexport function rightRoundedRect(x, y, width, height, radius) {\n    return \"M\" + x + \",\" + y\n        + \"h\" + (width - radius)\n        + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + radius + \",\" + radius\n        + \"v\" + (height - 2 * radius)\n        + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + -radius + \",\" + radius\n        + \"h\" + (radius - width)\n        + \"z\";\n}\n\nexport function getRadius(radius, cellShape) {\n    switch (cellShape) {\n        case cellPolygon.Hexagon:\n            return radius * 1.5;\n        case cellPolygon.Square:\n            return radius * 2;\n    }\n}\n\nexport function getGridData(cellShape, bin, grid) {\n    switch (cellShape) {\n        case cellPolygon.Hexagon:\n            return bin(grid);\n        case cellPolygon.Square:\n            return grid;\n    }\n}\n\nexport function getPath(cellShape, bin, distance) {\n    switch (cellShape) {\n        case cellPolygon.Hexagon:\n            return bin.hexagon()\n        case cellPolygon.Square:\n            return function (d) { return rightRoundedRect(d.x / 2, d.y / 2, distance, distance, 0); };\n    }\n}\n\nexport function getTransformation(cellShape) {\n    switch (cellShape) {\n        case cellPolygon.Hexagon:\n            return function (d) { return 'translate(' + d.x + ', ' + d.y + ')'; }\n        case cellPolygon.Square:\n            return function (d) { return 'translate(' + d.x / 2 + ', ' + d.y / 2 + ')'; };\n    }\n}\n\nexport function getNearestSlot(x, y, n, cellShape) {\n    switch (cellShape) {\n        case cellPolygon.Hexagon:\n            var gridx\n            var gridy\n            var factor = Math.sqrt(3) / 2\n            var d = n * 2\n            var sx = d * factor\n            var sy = n * 3\n            if (y % sy < n) {\n                gridy = y - (y % sy)\n                gridx = x - (x % sx)\n            } else {\n                gridy = y + (d - (n * factor) / 2) - (y % sy);\n                gridx = x + (n * factor) - (x % sx);\n            }\n            return [gridx, gridy]\n        case cellPolygon.Square:\n            var gridx\n            var gridy\n            var sx = n * 2\n            var sy = n * 2\n            gridy = y - (y % sy)\n            gridx = x - (x % sx)\n            return [gridx, gridy]\n    }\n}","import { getTransformation, getNearestSlot } from \"./shaper\";\nimport { strokeWidth } from \"./constants\";\nimport { cellAction } from \"./constants\";\n\nexport function mover(d) {\n    d3.selectAll(\".\" + this.getAttribute('class'))\n        // d3.select(this)\n        .transition()\n        .duration(10)\n        .style(\"fill-opacity\", 0.9);\n}\n\nexport function mout(d) {\n    d3.selectAll(\".\" + this.getAttribute('class'))\n        // d3.select(this)\n        .transition()\n        .duration(10)\n        .style(\"fill-opacity\", 1);\n}\n\nexport function mclickBase(d) {\n    let selectElement = document.querySelector('#cell-option');\n    switch (selectElement.value) {\n        case cellAction.Remove:\n            d3.select(this)\n                .style('fill', '#fff')\n                .style('stroke', '#e0e0e0')\n                .style('stroke-width', strokeWidth)\n                .lower();\n            break;\n        case cellAction.Add:\n            let colorElement = document.querySelector('#color-option');\n            d3.select(this)\n                .style('stroke-width', strokeWidth)\n                .style('fill', colorElement.value)\n                .style('stroke', '#000')\n                .on(\"mouseover\", mover)\n                .on(\"mouseout\", mout)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended))\n                .raise();\n            break;\n    }\n}\n\nexport function mclick(d) {\n    let selectElement = document.querySelector('#cell-option');\n    switch (selectElement.value) {\n        case cellAction.Remove:\n            d3.select(this)\n                .remove()\n            break;\n        case cellAction.Add:\n            let colorElement = document.querySelector('#color-option');\n            d3.select(this)\n                .style('stroke-width', strokeWidth)\n                .style('fill', colorElement.value)\n                .style('stroke', '#000')\n                .on(\"mouseover\", mover)\n                .on(\"mouseout\", mout)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended))\n                .raise();\n            break;\n    }\n}\n\nexport function dragstarted(event, d) {\n    d.fixed = false\n    d3.select(this).raise()\n        .style('stroke-width', 1)\n        .style('stroke', '#000');\n}\n\nexport function dragged(event, d) {\n    let cellShape = document.querySelector('#cell-shape-option').value;\n    let hexRadius = document.querySelector('input#radius').value;\n    var x = event.x\n    var y = event.y\n    var grids = getNearestSlot(x, y, hexRadius, cellShape);\n    d3.select(this)\n        .attr(\"x\", d.x = grids[0])\n        .attr(\"y\", d.y = grids[1])\n        .attr('transform', getTransformation(cellShape))\n}\n\nexport function dragended(event, d) {\n    d.fixed = true\n    d3.select(this)\n        .style('stroke-width', strokeWidth)\n        .style('stroke', '#000');\n}","import { hexbin } from 'd3-hexbin'\nimport cartogram from \"./catogram\"\nimport { getRadius, getGridData, getTransformation, getPath } from './shaper';\nimport { mover, mout, mclickBase, mclick, dragstarted, dragged, dragended } from './events';\nimport { colors, margin, width, height, strokeWidth } from './constants';\n\nexport var exportJson = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n};\n\nexport function render(topo, populationData, radius, cellShape, year) {\n    let shapeDistance = getRadius(radius, cellShape)\n    let cols = width / shapeDistance\n    let rows = height / shapeDistance;\n    let pointGrid = d3.range(rows * cols).map(function (el, i) {\n        return {\n            x: Math.floor(i % cols) * shapeDistance,\n            y: Math.floor(i / cols) * shapeDistance,\n            datapoint: 0\n        };\n    });\n\n    var populationJson = getData(populationData)\n\n    var topo_cartogram = cartogram()\n        .projection(null)\n        .properties(function (d) {\n            return d.properties;\n        })\n        .value(function (d) {\n            var currentValue = d.properties.count\n            return +currentValue\n        });\n    topo_cartogram.features(topo, topo.objects.tiles.geometries)\n    topo_cartogram.value(function (d) {\n        var currentValue = populationJson[d.properties.id][year]\n        return +currentValue\n    });\n\n    var topoFeatures = topo_cartogram(topo, topo.objects.tiles.geometries).features\n    export_format(topoFeatures);\n\n    let newHexbin = hexbin()\n        .radius(radius)\n        .x(function (d) { return d.x; })\n        .y(function (d) { return d.y; })\n\n    d3.select('#container').selectAll(\"*\").remove()\n    const svg = d3.select('#container')\n        .append('svg')\n        .attr('width', width + margin.left + margin.top)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left} ${margin.top})`);\n\n    svg.append('g').attr('id', 'hexes')\n        .selectAll('.hex')\n        .data(getGridData(cellShape, newHexbin, pointGrid))\n        .enter().append('path')\n        .attr('class', 'hex')\n        .attr('transform', getTransformation(cellShape))\n        .attr('d', getPath(cellShape, newHexbin, shapeDistance))\n        .style('fill', '#fff')\n        .style('stroke', '#e0e0e0')\n        .style('stroke-width', strokeWidth)\n        .on(\"click\", mclickBase);\n\n    let features = flatten_features(topoFeatures);\n    for (let i = 0; i < features.length; i++) {\n        for (let j = 0; j < features[i].coordinates.length; j++) {\n            var polygonPoints = features[i].coordinates[j];\n\n            let usPoints = pointGrid.reduce(function (arr, el) {\n                if (d3.polygonContains(polygonPoints, [el.x, el.y])) arr.push(el);\n                return arr;\n            }, [])\n\n            svg.append('g')\n                .attr('id', 'hexes')\n                .selectAll('.hex')\n                .data(getGridData(cellShape, newHexbin, usPoints))\n                .enter().append('path')\n                .attr('class', 'hex' + features[i].properties.id)\n                .attr('transform', getTransformation(cellShape))\n                .attr(\"x\", function (d) { return d.x; })\n                .attr(\"y\", function (d) { return d.y; })\n                .attr('d', getPath(cellShape, newHexbin, shapeDistance))\n                .style('fill', colors[i % 19])\n                .style('stroke', '#000')\n                .style('stroke-width', strokeWidth)\n                .on(\"click\", mclick)\n                .on(\"mouseover\", mover)\n                .on(\"mouseout\", mout)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended));\n        }\n    }\n}\n\nfunction getData(data) {\n    var obj = {}\n    for (var x in data) {\n        obj[data[x].code] = data[x]\n    }\n    return obj\n}\n\nfunction flatten_features(topoFeatures) {\n    let features = []\n    for (let i = 0; i < topoFeatures.length; i++) {\n        var tempFeatures = []\n        if (topoFeatures[i].geometry.type == \"MultiPolygon\") {\n            for (let j = 0; j < topoFeatures[i].geometry.coordinates.length; j++) {\n                tempFeatures[j] = topoFeatures[i].geometry.coordinates[j][0]\n            }\n        }\n        else if (topoFeatures[i].geometry.type == \"Polygon\") {\n            tempFeatures[0] = topoFeatures[i].geometry.coordinates[0]\n        }\n        features[i] = {\n            \"coordinates\": tempFeatures,\n            \"properties\": topoFeatures[i].properties\n        }\n    }\n    return features;\n}\n\nfunction export_format(topoFeatures) {\n    for (let i = 0; i < topoFeatures.length; i++) {\n        if (topoFeatures[i].geometry.type == \"MultiPolygon\") {\n            exportJson.features[i] = topoFeatures[i]\n            exportJson.features[i].geometry.type = \"MultiPolygon\"\n        } else {\n            exportJson.features[i] = topoFeatures[i]\n            exportJson.features[i].geometry.type = \"Polygon\"\n        }\n    }\n}","import { download } from './export';\nimport { render } from './core/plot'\n\ndocument.querySelector('#loader').classList.add(\"hide\");\n\nlet radiusInput = document.querySelector('input#radius');\nlet radiusButton = document.querySelector('input#select-radius');\n\nlet downloadButton = document.querySelector('#download');\n\nlet cellShapeButton = document.querySelector('#cell-shape');\nlet cellShapeInput = document.querySelector('#cell-shape-option');\n\nlet yearInput = document.querySelector('input#year');\nlet yearButton = document.querySelector('input#select-year');\n\nradiusButton.addEventListener('click', () => {\n  radiusInput = document.querySelector('input#radius');\n  document.querySelector('#loader').classList.remove(\"hide\");\n  load()\n});\n\nyearButton.addEventListener('click', () => {\n  yearInput = document.querySelector('input#year');\n  document.querySelector('#loader').classList.remove(\"hide\");\n  load()\n});\n\ndownloadButton.addEventListener('click', () => {\n  let fileType = document.querySelector('#download-option').value;\n  download(fileType, yearInput.value);\n});\n\ncellShapeButton.addEventListener('click', () => {\n  cellShapeInput = document.querySelector('#cell-shape-option');\n  document.querySelector('#loader').classList.remove(\"hide\");\n  load()\n});\n\nfunction load() {\n  let hexRadius = radiusInput.value\n  let cellShape = cellShapeInput.value\n  let year = yearInput.value;\n  \n  const topoData = d3.json('https://raw.githubusercontent.com/owid/cartograms/feature/square-grid/data/base/2018/v2/topo.json');\n  const popData = d3.csv('https://raw.githubusercontent.com/owid/cartograms/feature/square-grid/data/population/unpd-flat.csv');\n  \n  Promise.all([topoData, popData]).then(res => {\n    let [topoData, popData] = res;\n    render(topoData, popData, hexRadius, cellShape, year);\n    document.querySelector('#loader').classList.add(\"hide\");\n  });\n}\n\nload()"],"names":["$66ebcfb2345a56ed$export$8f45430ccf837300","$66ebcfb2345a56ed$export$7ede87f9b603dd3c","$66ebcfb2345a56ed$export$7e3df82ee760448c","$66ebcfb2345a56ed$export$ac607276a8fe9f0a","$66ebcfb2345a56ed$export$3701b03953d2eac3","$66ebcfb2345a56ed$export$e181f8a9355a7966","$66ebcfb2345a56ed$export$133cda5e134a2124","$c8a889026171d251$export$24422be91ad4011f","fileType","year","exportObj","exportName","dataStr","downloadAnchorNode","filename","exportJson","encodeURIComponent","JSON","stringify","document","createElement","setAttribute","body","appendChild","click","remove","d3","select","each","this","attr","btoa","html","$28bd4c13f05a9ff5$var$thirdPi","Math","PI","$28bd4c13f05a9ff5$var$angles","$28bd4c13f05a9ff5$var$pointX","d","$28bd4c13f05a9ff5$var$pointY","$44a48d1cb1f34224$export$bda7ba77fb86c375","constructor","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","abs","valueOf","n","$54ced0ad7294c1a8$export$2e2bcd8739ae039","arrays","Array","from","array","$54ced0ad7294c1a8$var$flatten","$daf42a1f07322cf6$export$2e2bcd8739ae039","values","valueof","undefined","value","index","$523470b6dc0fb943$export$2e2bcd8739ae039","$f64eb890237a613b$var$streamGeometry","geometry","stream","$f64eb890237a613b$var$streamGeometryType","hasOwnProperty","type","$f64eb890237a613b$var$streamObjectType","Feature","object","FeatureCollection","features","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","$f64eb890237a613b$var$streamLine","MultiLineString","Polygon","$f64eb890237a613b$var$streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","$f64eb890237a613b$export$2e2bcd8739ae039","$670604c4306869d0$export$18c7bea995a110f","$670604c4306869d0$export$e51408a300e8929a","$670604c4306869d0$export$c39a5cba78ea0fc2","$670604c4306869d0$export$a4b4b4d4d776fe92","$670604c4306869d0$export$41fc368e1a942b97","$670604c4306869d0$export$8449e153fbd325fc","$670604c4306869d0$export$2335f513bbd82c6d","$670604c4306869d0$export$628dc4eed22b0fbd","atan","$670604c4306869d0$export$b8b770ee6a0d9760","atan2","$670604c4306869d0$export$50d414a77b60d802","cos","$670604c4306869d0$export$5de3937cb4b592ed","ceil","exp","floor","hypot","log","pow","sin","$670604c4306869d0$export$c5552dfdbc7cec71","sign","$670604c4306869d0$export$eba8049fb5020b81","sqrt","tan","$670604c4306869d0$export$41726bdb1fc63f","asin","$f233d25ba5a1175b$export$2e2bcd8739ae039","$aac5fcedac7c8011$var$x00","$aac5fcedac7c8011$var$y00","$aac5fcedac7c8011$var$x0","$aac5fcedac7c8011$var$y0","$aac5fcedac7c8011$var$areaSum","$aac5fcedac7c8011$var$areaRingSum","$aac5fcedac7c8011$var$areaStream","$aac5fcedac7c8011$var$areaRingStart","$aac5fcedac7c8011$var$areaRingEnd","result","area","$aac5fcedac7c8011$var$areaPointFirst","$aac5fcedac7c8011$var$areaPoint","$aac5fcedac7c8011$export$2e2bcd8739ae039","$efdab2656f7d9ccc$var$x0","Infinity","$efdab2656f7d9ccc$var$y0","$efdab2656f7d9ccc$var$x1","$efdab2656f7d9ccc$var$y1","$8d0804faef1e75f0$var$x00","$8d0804faef1e75f0$var$y00","$8d0804faef1e75f0$var$x0","$8d0804faef1e75f0$var$y0","$efdab2656f7d9ccc$export$2e2bcd8739ae039","bounds","$8d0804faef1e75f0$var$X0","$8d0804faef1e75f0$var$Y0","$8d0804faef1e75f0$var$Z0","$8d0804faef1e75f0$var$X1","$8d0804faef1e75f0$var$Y1","$8d0804faef1e75f0$var$Z1","$8d0804faef1e75f0$var$X2","$8d0804faef1e75f0$var$Y2","$8d0804faef1e75f0$var$Z2","$8d0804faef1e75f0$var$centroidStream","$8d0804faef1e75f0$var$centroidPoint","$8d0804faef1e75f0$var$centroidLineStart","$8d0804faef1e75f0$var$centroidLineEnd","$8d0804faef1e75f0$var$centroidRingStart","$8d0804faef1e75f0$var$centroidRingEnd","centroid","NaN","$8d0804faef1e75f0$var$centroidPointFirstLine","$8d0804faef1e75f0$var$centroidPointLine","dx","dy","z","$8d0804faef1e75f0$var$centroidPointFirstRing","$8d0804faef1e75f0$var$centroidPointRing","$8d0804faef1e75f0$export$2e2bcd8739ae039","$bc272bd0e70c3e89$export$2e2bcd8739ae039","context","_context","prototype","_radius","pointRadius","_","_line","_point","closePath","moveTo","lineTo","arc","$9d42a1f4ad2437ef$var$lengthRing","$9d42a1f4ad2437ef$var$x00","$9d42a1f4ad2437ef$var$y00","$9d42a1f4ad2437ef$var$x0","$9d42a1f4ad2437ef$var$y0","$9d42a1f4ad2437ef$var$lengthSum","$9d42a1f4ad2437ef$var$lengthStream","$9d42a1f4ad2437ef$var$lengthPointFirst","$9d42a1f4ad2437ef$var$lengthPoint","$9d42a1f4ad2437ef$export$2e2bcd8739ae039","$eeca8dbd32c6e6b7$export$2e2bcd8739ae039","_string","$eeca8dbd32c6e6b7$var$circle","radius","$58c46562f4a8d739$export$2e2bcd8739ae039","projection","projectionStream","contextStream","path","apply","arguments","measure","$2f42e5268a6797f5$export$2e2bcd8739ae039","line","lines","m","push","rejoin","pop","concat","shift","$f3f0691eeedc9e29$export$2e2bcd8739ae039","a","b","$b2af5411bf749438$var$Intersection","points","other","entry","o","e","v","$b2af5411bf749438$export$2e2bcd8739ae039","segments","compareIntersection","startInside","interpolate","n1","subject","clip","forEach","segment","p0","p1","sort","$b2af5411bf749438$var$link","start","current","isSubject","$36ccb64133f7e1ee$export$12f9ad44fe773943","$36ccb64133f7e1ee$export$6e6697ef026a96","lambda","phi","cosPhi","$36ccb64133f7e1ee$export$2ef80f51436a9de9","$36ccb64133f7e1ee$export$4763f5351b14293f","$36ccb64133f7e1ee$export$e62eba72fc898eae","$36ccb64133f7e1ee$export$52d0ee3fc868d452","vector","k","$36ccb64133f7e1ee$export$6789498aec2cb34b","l","$3befe798acd13223$var$longitude","$fbd6c74debefbf49$export$2e2bcd8739ae039","pointVisible","clipLine","sink","polygon","ring","ringBuffer","ringSink","polygonStarted","point1","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","phi1","delta","absDelta","antimeridian","intersection","phiArc","$3befe798acd13223$export$2e2bcd8739ae039","$fbd6c74debefbf49$var$compareIntersection","pointLine","clean","ringSegments","filter","$fbd6c74debefbf49$var$validSegment","_circle","join","$6887d3a2b3b1b107$export$2e2bcd8739ae039","sign0","sign1","sinLambda0Lambda1","$6887d3a2b3b1b107$var$clipAntimeridianIntersect","to","direction","$2f457a25c4f4f64a$export$2e2bcd8739ae039","compose","invert","$f7d73791d6cf97d0$var$rotationIdentity","round","$f7d73791d6cf97d0$export$a2ba89726971a90f","deltaLambda","deltaPhi","deltaGamma","$f7d73791d6cf97d0$var$rotationLambda","$f7d73791d6cf97d0$var$rotationPhiGamma","$f7d73791d6cf97d0$var$forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","$d53290674478fba6$export$b5441eb324cd8d4e","t0","t1","cosRadius","sinRadius","step","$d53290674478fba6$var$circleRadius","t","acos","$24a437a45f982759$export$2e2bcd8739ae039","cr","delta1","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code1","r","code","c0","v0","v00","point2","c","$7d62d240b7fd88a7$export$2e2bcd8739ae039","x0","y0","x1","y1","visible1","a1","corner","comparePoint","ca","cb","ring1","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","ax","ay","$b55afac96a294cb9$export$2e2bcd8739ae039","$0412b2d170387dff$export$6b468dcfb64c653c","methods","s","$0412b2d170387dff$var$TransformStream","key","$f635eb16c9b15b07$var$fit","fitBounds","clipExtent","scale","translate","$f635eb16c9b15b07$export$e450184041869e7f","extent","h","$64af1b85c5f97f77$var$cosMinDistance","$64af1b85c5f97f77$export$2e2bcd8739ae039","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","$64af1b85c5f97f77$var$resample","$64af1b85c5f97f77$var$resampleNone","$5ee116a807460c55$var$transformRadians","$5ee116a807460c55$var$scaleTranslateRotate","sx","sy","alpha","transform","$5ee116a807460c55$var$scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","$5ee116a807460c55$export$155d5a6fa6fddeba","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","$5ee116a807460c55$export$2e2bcd8739ae039","recenter","center","reset","$5ee116a807460c55$var$transformRotate","clipAngle","reflectX","reflectY","precision","fitExtent","fitSize","size","$f635eb16c9b15b07$export$33a367fa1728c3ba","fitWidth","width","$f635eb16c9b15b07$export$7d8f2192ef31c5a7","fitHeight","height","$f635eb16c9b15b07$export$7069bab0d2ced675","$be3cbe5874066802$export$75409dad1c406288","sy0","forward","$5474082c8e90dfac$export$ae68c6db8b65046a","r0","r0y","$be3cbe5874066802$export$2e2bcd8739ae039","parallels","$6d55d2c6180e495a$export$2e2bcd8739ae039","$ea2fc94c04aa5385$export$2e2bcd8739ae039","kx","ky","input","output","$6ce12edae041358d$export$2e2bcd8739ae039","topology","o1","objects","map","$6ce12edae041358d$var$feature","id","bbox","properties","$6ce12edae041358d$export$be5493f9613cbbe","o2","transformPoint","arcs1","arcs","$762afc43b78022d9$export$2e2bcd8739ae039","$3c2d3dcc16717852$export$2e2bcd8739ae039","iterations","cartogram","copy","out1","tf","transformer","len2","i2","projectedArcs","len1","i1","reverse","Object","create","geometryType","geom","call","totalValue","len3","i3","mass1","radius1","rSquared","distSquared","dist","Fij","areas","totalArea","sizeErrorsTot","sizeErrorsNum","meta","desired","mass","sizeError","sizeError1","forceReductionFactor","cosArctan","sinArctan","div","obj","copyObject","constant","feature","topo","f","props","$59a031d70e92b6fa$export$c76557890c9dceaa","cellShape","bin","grid","$59a031d70e92b6fa$export$2aa3fd96c49a84a8","distance","hexagon","$59a031d70e92b6fa$export$e48d745e469adeed","$16132224cc3f67c4$export$fac0edfc8999e524","selectAll","getAttribute","transition","duration","style","$16132224cc3f67c4$export$32567469327ce4e0","$16132224cc3f67c4$export$b3f75be04d1fdfbb","querySelector","lower","colorElement","on","drag","$16132224cc3f67c4$export$e2e0be83fb10959d","$16132224cc3f67c4$export$48de5704dd11ae45","$16132224cc3f67c4$export$ce1b536b60f41f81","raise","$16132224cc3f67c4$export$31195d1efb42427f","event","fixed","hexRadius","grids","factor","gridy","gridx","$59a031d70e92b6fa$export$c1c11d0f7c7be309","$ae2a81e928889410$export$b4a1275cffd1538d","$ae2a81e928889410$export$b3890eb0ae9dca99","populationData","shapeDistance","$59a031d70e92b6fa$export$35724d9c2979edc5","cols","rows","pointGrid","range","el","datapoint","populationJson","data","$ae2a81e928889410$var$getData","topo_cartogram","count","tiles","topoFeatures","$ae2a81e928889410$var$export_format","newHexbin","dx1","dy1","x01","y01","x11","y11","hexbin","binsById","bins","isNaN","px","py","pj","pi","py1","px1","pi2","pj2","px2","py2","centers","mesh","fragment","slice","$28bd4c13f05a9ff5$export$2e2bcd8739ae039","svg","append","enter","tempFeatures","$ae2a81e928889410$var$flatten_features","polygonPoints","usPoints","reduce","arr","polygonContains","classList","$6b17f08f738443dc$var$radiusInput","$6b17f08f738443dc$var$radiusButton","$6b17f08f738443dc$var$downloadButton","$6b17f08f738443dc$var$cellShapeButton","$6b17f08f738443dc$var$cellShapeInput","$6b17f08f738443dc$var$yearInput","$6b17f08f738443dc$var$yearButton","$6b17f08f738443dc$var$load","topoData1","json","popData1","csv","Promise","all","then","res","topoData","popData","addEventListener"],"version":3,"file":"index.979c05f2.js.map"}